<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>yun主题写作语法</title>
      <link href="/posts/a6c287ab/"/>
      <url>/posts/a6c287ab/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="421ef83552e4df9788dac8835fd113cc48765ff5309c0033443fc0a78b506919"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-yun</title>
      <link href="/posts/4567d7fd/"/>
      <url>/posts/4567d7fd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>Hexo 主题 Yun</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相册</title>
      <link href="/posts/e26d1860/"/>
      <url>/posts/e26d1860/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">type</span><span class="token punctuation">:</span> albums<span class="token key atrule">title</span><span class="token punctuation">:</span> 相册<span class="token key atrule">url</span><span class="token punctuation">:</span> /albums/miracle.html<span class="token key atrule">abbrlink</span><span class="token punctuation">:</span> e26d1860<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-03-05 01:31:08</span><span class="token key atrule">updated</span><span class="token punctuation">:</span> <span class="token datetime number">2020-07-14 16:31:00</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派镜像烧录</title>
      <link href="/posts/9bd7a689/"/>
      <url>/posts/9bd7a689/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="一、安装balenaEtcher烧录工具"><a href="#一、安装balenaEtcher烧录工具" class="headerlink" title="一、安装balenaEtcher烧录工具"></a>一、安装balenaEtcher烧录工具</h1><blockquote><p>下载链接：<a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></p></blockquote><p><img src="https://i.loli.net/2020/12/07/1mEjuCDOehxBPFf.png" alt="image-20201025210635969" loading="lazy"></p><h1 id="二、烧录镜像文件"><a href="#二、烧录镜像文件" class="headerlink" title="二、烧录镜像文件"></a>二、烧录镜像文件</h1><p><img src="https://i.loli.net/2020/12/07/4UDTdklvrIpz6hL.png" alt="image-20201025210732316" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/07/BzS7h2TEVXikadP.png" alt="image-20201025210823494" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/07/aRISFlDgMHO9pEj.png" alt="image-20201025210848755" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/07/b3D8ART2KmVvFUZ.png" alt="image-20201025212943590" loading="lazy"></p><h1 id="三、烧录镜像成功"><a href="#三、烧录镜像成功" class="headerlink" title="三、烧录镜像成功"></a>三、烧录镜像成功</h1><p><img src="https://i.loli.net/2020/12/07/hayiYcSG3TRHPfD.png" alt="image-20201025213002398" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派环境搭建</title>
      <link href="/posts/f0a343d3/"/>
      <url>/posts/f0a343d3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="一、-修改启动参数"><a href="#一、-修改启动参数" class="headerlink" title="一、 修改启动参数"></a>一、 修改启动参数</h1><h2 id="1、打开22号ssh端口"><a href="#1、打开22号ssh端口" class="headerlink" title="1、打开22号ssh端口"></a>1、打开22号ssh端口</h2><blockquote><p>在boot目录建立ssh空文件，不需要任何后缀名</p></blockquote><p><img src="https://i.loli.net/2020/12/19/lPsBZFKAov4OJ8f.png" alt="image-20201025213600034" loading="lazy"></p><h2 id="2、配置WIFI"><a href="#2、配置WIFI" class="headerlink" title="2、配置WIFI"></a>2、配置WIFI</h2><blockquote><p>在boot目录建立wpa_supplicant.conf内容如下（WiFi账号密码改为自己的）：</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c">country<span class="token operator">=</span>CNctrl_interface<span class="token operator">=</span>DIR<span class="token operator">=</span><span class="token operator">/</span>var<span class="token operator">/</span>run<span class="token operator">/</span>wpa_supplicant GROUP<span class="token operator">=</span>netdevupdate_config<span class="token operator">=</span><span class="token number">1</span>network<span class="token operator">=</span><span class="token punctuation">&#123;</span>ssid<span class="token operator">=</span><span class="token string">"hw1311"</span>psk<span class="token operator">=</span><span class="token string">"13111311"</span>key_mgmt<span class="token operator">=</span>WPA<span class="token operator">-</span>PSKpriority<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、连接树莓派"><a href="#二、连接树莓派" class="headerlink" title="二、连接树莓派"></a>二、连接树莓派</h1><h2 id="1、通过ssh连接树莓派"><a href="#1、通过ssh连接树莓派" class="headerlink" title="1、通过ssh连接树莓派"></a>1、通过ssh连接树莓派</h2><blockquote><p>打开命令行，输入<strong>ssh <a href="mailto:&#112;&#105;&#64;&#114;&#x61;&#115;&#112;&#98;&#x65;&#x72;&#114;&#x79;&#112;&#x69;&#x2e;&#108;&#111;&#99;&#97;&#x6c;">&#112;&#105;&#64;&#114;&#x61;&#115;&#112;&#98;&#x65;&#x72;&#114;&#x79;&#112;&#x69;&#x2e;&#108;&#111;&#99;&#97;&#x6c;</a></strong></p></blockquote><p>若出现报错，上传用户文件夹.ssh文件夹里面文件，再次登录</p><p><img src="https://i.loli.net/2020/12/19/kjeKxhu3dTJLWX7.png" alt="image-20201025214255208" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/19/H948WAqePTOS5Xz.png" alt="image-20201025214311586" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/19/s5GjY6rdTXlA3Mv.png" alt="image-20201025214715729" loading="lazy"></p><h2 id="2、通过VNC远程访问"><a href="#2、通过VNC远程访问" class="headerlink" title="2、通过VNC远程访问"></a>2、通过VNC远程访问</h2><blockquote><p>电脑安装VNC：<a href="https://www.realvnc.com/en/connect/download/viewer/">https://www.realvnc.com/en/connect/download/viewer/</a></p></blockquote><p>树莓派并不需要你为她配备单独的显示器、键盘和鼠标，你可以设置VNC或SSH，通过你平时常用的电脑来远程访问树莓派。</p><p>Raspbian系统安装后默认带有VNC和SSH软件包（除非你在官网选择下载的是最小安装包），你只需要把VNC和SSH服务打开就可以了。</p><blockquote><p>咱们的默认账户是：pi</p><p>pi账户的默认密码是：raspberry</p></blockquote><ul><li>启用VNC和SSH服务</li></ul><p>还是打开LX终端，在命令提示符后键入如下命令，然后按回车键：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">sudo raspi<span class="token operator">-</span>config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你将打开树莓派的软件配置工具。</p><p><img src="https://i.loli.net/2020/12/19/JrnbRuW8HZKGsYN.png" alt="image-20201025215441969" loading="lazy"></p><p>使用上下方向键选择 5 Interfacing Option，按回车键进入接口配置。</p><p><img src="https://i.loli.net/2020/12/19/blXH72SDTVa8hf6.png" alt="image-20201025215527917" loading="lazy"></p><p>在这里你可以看到 P2 SSH 和 P3 VNC，二者的启用方法相同，下面以VNC为例介绍启用操作步骤。</p><p>使用上下方向键选择P3 VNC，按回车键进入 VNC配置。</p><p><img src="https://i.loli.net/2020/12/19/gJ8ryzdkRmDIGFQ.png" alt="image-20201025215610796" loading="lazy"></p><p>使用左右方向键选择&lt;是&gt;，按回车键，系统提示VNC服务已启动。</p><p><img src="https://i.loli.net/2020/12/19/BFvbxi2kCTuGI3h.png" alt="image-20201025215654238" loading="lazy"></p><p>按回车键&lt;确定&gt;，回到配置工具主界面，通过 Tab 键选中右下角的<Finish>，按回车即可完成VNC服务的打开。</p><p><img src="https://i.loli.net/2020/12/19/3NoiLP4rf1sdej9.png" alt="image-20201025215755506" loading="lazy"></p><p>最后不要忘了要查看树莓派的IP地址，在终端里输入 ifconfig 命令，按回车键后你将看到树莓派的IP地址。</p><p><img src="https://i.loli.net/2020/12/19/6i1UGRwHQmV5hat.png" alt="image-20201025215842212" loading="lazy"></p><ul><li><strong>使用VNC远程访问树莓派</strong></li></ul><p><img src="https://i.loli.net/2020/12/19/iL1wpTntHNrKW7l.png" alt="image-20201025220051910" loading="lazy"></p><ul><li>出现这种情况</li></ul><p><img src="https://i.loli.net/2020/12/19/GdgwDtUqFHE3vkA.png" alt="image-20201025220702840" loading="lazy"></p><p>解决办法：changing the resolution to the highest（更改更高的分辨率即可），ssh下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">sudo raspi<span class="token operator">-</span>config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/12/19/c1rXkOH4fb8DnTo.png" alt="image-20201025220819826" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/19/l9ImB2wUfSYhZka.png" alt="image-20201025220837492" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/19/PfXCFtdZLO4Q1KA.png" alt="image-20201025220953102" loading="lazy"></p><p>重新用VNC连接</p><p><img src="https://i.loli.net/2020/12/19/7pesuBPzoYtwClH.png" alt="image-20201025221123776" loading="lazy"></p><h1 id="三、树莓派初始设置"><a href="#三、树莓派初始设置" class="headerlink" title="三、树莓派初始设置"></a>三、树莓派初始设置</h1><p>初次进入Raspbian，系统会自动弹出欢迎界面（Welcome to Raspberry Pi），也就是树莓派的初始设置引导程序，点击右下角的【Next】按钮，开始进行初始配置。<img src="https://i.loli.net/2020/12/19/o4tMXjGy7FJ96Uu.png" alt="image-20201025221315270" loading="lazy"></p><ul><li><strong>设置国家、语言和时区</strong></li></ul><p>你可以依次选择China、Chinese和Shanghai，选择完成后点击【Next】按钮。<img src="https://i.loli.net/2020/12/19/7NtsBGhuiDaV3RC.png" alt="image-20201025221357198" loading="lazy"></p><ul><li><strong>设置账户密码</strong></li></ul><p>Raspbian默认用户名为“pi”（不带引号），默认密码为“raspberry”（不带引号），为了安全起见，系统强烈建议你修改密码为一个只有你自己知道的密码，当然你千万不要把自己设置的密码忘了。录入完新的密码，点击【Next】按钮。<img src="https://i.loli.net/2020/12/19/yJPsmZejUxNvtgM.png" alt="image-20201025221437477" loading="lazy"></p><ul><li><strong>设置WiFI网络</strong></li></ul><p>选择你的WiFi热点，然后点击【Next】按钮，在接下来弹出的窗口中输入你的WiFi密码，随后点击【Next】按钮。<img src="https://i.loli.net/2020/12/19/5IuRtLXfzCBnNxc.png" alt="image-20201025221547544" loading="lazy"></p><ul><li><strong>软件升级</strong></li></ul><p>WiFi连接成功后，系统会提示你进行软件升级，你可以点击【Next】按钮进行升级，也可以点击【Skip】按钮跳过升级。升级需要较长时间，因此本文先跳过升级，日后再通过包管理工具来升级。<img src="https://i.loli.net/2020/12/19/fAXplQIqGTh86MH.png" alt="image-20201025221627595" loading="lazy"></p><ul><li><strong>重新启动</strong></li></ul><p>最后就是完成了上述全部设置，系统提示设置完成，点击【Restart】按钮重新启动系统。<img src="https://i.loli.net/2020/12/19/Q7yKu8Mibc4A1En.png" alt="image-20201025221654070" loading="lazy"></p><h1 id="四、配置静态IP"><a href="#四、配置静态IP" class="headerlink" title="四、配置静态IP"></a>四、配置静态IP</h1><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//设置静态IP  加在文件后面</span>sudo nano <span class="token operator">/</span>etc<span class="token operator">/</span>dhcpcd<span class="token punctuation">.</span>conf    interface wlan0<span class="token keyword">static</span> ip_address<span class="token operator">=</span><span class="token number">172.16</span><span class="token number">.47</span><span class="token number">.86</span><span class="token operator">/</span><span class="token number">24</span><span class="token keyword">static</span> routers<span class="token operator">=</span><span class="token number">172.16</span><span class="token number">.47</span><span class="token number">.1</span><span class="token keyword">static</span> domain_name_servers<span class="token operator">=</span><span class="token number">218.196</span><span class="token number">.40</span><span class="token number">.9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="五、换源"><a href="#五、换源" class="headerlink" title="五、换源"></a>五、换源</h1><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/</a></p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"># 编辑 `<span class="token operator">/</span>etc<span class="token operator">/</span>apt<span class="token operator">/</span>sources<span class="token punctuation">.</span>list` 文件，删除原文件所有内容，用以下内容取代：deb http<span class="token operator">:</span><span class="token comment">//mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib rpi</span>deb<span class="token operator">-</span>src http<span class="token operator">:</span><span class="token comment">//mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib rpi</span># 编辑 `<span class="token operator">/</span>etc<span class="token operator">/</span>apt<span class="token operator">/</span>sources<span class="token punctuation">.</span>list<span class="token punctuation">.</span>d<span class="token operator">/</span>raspi<span class="token punctuation">.</span>list` 文件，删除原文件所有内容，用以下内容取代：deb http<span class="token operator">:</span><span class="token comment">//mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派安装OpenCV</title>
      <link href="/posts/bbf58368/"/>
      <url>/posts/bbf58368/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="一、安装所需要的库和依赖"><a href="#一、安装所需要的库和依赖" class="headerlink" title="一、安装所需要的库和依赖"></a>一、安装所需要的库和依赖</h1><pre class="line-numbers language-c" data-language="c"><code class="language-c">sudo pip3 install numpysudo apt<span class="token operator">-</span>get install build<span class="token operator">-</span>essential git cmake pkg<span class="token operator">-</span>config <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libjpeg8<span class="token operator">-</span>dev <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libtiff5<span class="token operator">-</span>dev <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libjasper<span class="token operator">-</span>dev <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libpng12<span class="token operator">-</span>dev <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libavcodec<span class="token operator">-</span>dev libavformat<span class="token operator">-</span>dev libswscale<span class="token operator">-</span>dev libv4l<span class="token operator">-</span>dev <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libgtk2<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">-</span>dev <span class="token operator">-</span>ysudo apt<span class="token operator">-</span>get install libatlas<span class="token operator">-</span>base<span class="token operator">-</span>dev gfortran <span class="token operator">-</span>y    sudo pip3 install opencv<span class="token operator">-</span>python<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="二、测试安装环境"><a href="#二、测试安装环境" class="headerlink" title="二、测试安装环境"></a>二、测试安装环境</h1><blockquote><p>在终端输入 ：python3<br>然后 ：import cv2<br>如果安装成功，则import不会有问题<br>下面就可以输出OpenCv的版本号<br>使用 ：print(cv2.version)<br>退出python用： exit()</p></blockquote><p><img src="https://i.loli.net/2020/12/07/nPGjdg2J8tHpO9U.png" alt="image-20201026180316710" loading="lazy"></p><h1 id="三、简单应用"><a href="#三、简单应用" class="headerlink" title="三、简单应用"></a>三、简单应用</h1><blockquote><p>使用OpenCv库读取usb摄像头，实时显示并拍照</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npcap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># get a frame</span> ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># show a frame</span> cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"capture"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>   <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#退出并拍照</span>  cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"takephoto2.jpg"</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"take Photo Ok"</span><span class="token punctuation">)</span>  <span class="token keyword">break</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/12/07/rD73QjcCfSavMEK.png" alt="image-20201026175921758" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派运行实例</title>
      <link href="/posts/2cd3bcd8/"/>
      <url>/posts/2cd3bcd8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="一、树莓派引脚定义"><a href="#一、树莓派引脚定义" class="headerlink" title="一、树莓派引脚定义"></a>一、树莓派引脚定义</h1><p>学习如何用树莓派驱动LED灯时需要先了解树莓派管脚GPIO的编码方式，树莓派的管脚编码方式与51单片机的管脚编码有些不一样，在树莓派的GPIO上分为<strong>两种编码方式</strong>，分别为<strong>BCM</strong>和<strong>wiringPi编码</strong>，不同的编码方式在编写程序驱动GPIO时稍有区别，具体编码如下：</p><p><img src="https://i.loli.net/2020/12/19/EQvngLhCGaoP7Dk.png" alt="image-20201027185041036" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/19/BhRGtWprT3yYZ6m.png" alt="image-20201027193659980" loading="lazy"></p><p><img src="https://i.loli.net/2020/12/19/bqijf82TmUxknwG.png" alt="image-20201027193715459" loading="lazy"></p><h1 id="二、蜂鸣器响"><a href="#二、蜂鸣器响" class="headerlink" title="二、蜂鸣器响"></a>二、蜂鸣器响</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO                <span class="token comment"># 引入GPIO模块</span><span class="token keyword">from</span> time <span class="token keyword">import</span> sleep                     <span class="token comment"># 引入time模块</span>GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>            <span class="token comment"># 使用BCM编号方式</span>GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span>GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>            <span class="token comment"># 将GPIO19设置为输出模式</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                                     <span class="token comment"># 无限循环  </span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span>GPIO<span class="token punctuation">.</span>HIGH<span class="token punctuation">)</span>   <span class="token comment"># 将GPIO19设置为高电平，点亮LED  </span>    sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token comment"># 等待1秒钟 </span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span>GPIO<span class="token punctuation">.</span>LOW<span class="token punctuation">)</span>  <span class="token comment"># 将GPIO19设置为低电平，熄灭LED </span>    sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                              <span class="token comment"># 等待0.5秒钟 </span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                      <span class="token comment"># 按下任意键退出</span>GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span>                     <span class="token comment"># 清理释放GPIO资源，将GPIO复位 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派常用模块</title>
      <link href="/posts/e45d4a36/"/>
      <url>/posts/e45d4a36/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="1-PWM"><a href="#1-PWM" class="headerlink" title="1.PWM"></a>1.PWM</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO                 <span class="token comment"># 引入GPIO模块</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    LedPin <span class="token operator">=</span> <span class="token number">19</span>    freq <span class="token operator">=</span> <span class="token number">100</span>                          <span class="token comment"># 存放PWM频率变量，这里初始值为100，可以根据实际需要修改</span>    dc <span class="token operator">=</span> <span class="token number">0</span>                              <span class="token comment"># 存放PWM占空比变量，这里初始值为0，可以根据实际需要修改</span>    GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>              <span class="token comment"># 使用BCM编号方式</span>    GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>LedPin<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>        <span class="token comment"># 将GPIO19设置为输出模式</span>    pwm <span class="token operator">=</span> GPIO<span class="token punctuation">.</span>PWM<span class="token punctuation">(</span>LedPin<span class="token punctuation">,</span> freq<span class="token punctuation">)</span>        <span class="token comment"># 创建PWM对象，并指定初始频率</span>    pwm<span class="token punctuation">.</span>start<span class="token punctuation">(</span>dc<span class="token punctuation">)</span>                       <span class="token comment"># 启动PWM，并指定初始占空比</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        freq <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input the frequency of PWM(1-2000Hz): "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 等待输入新PWM频率</span>        pwm<span class="token punctuation">.</span>ChangeFrequency<span class="token punctuation">(</span>freq<span class="token punctuation">)</span>       <span class="token comment"># 改变PWM频率</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            dc <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input the duty cycle(0-100): "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 等待输入新PWM占空比</span>            pwm<span class="token punctuation">.</span>ChangeDutyCycle<span class="token punctuation">(</span>dc<span class="token punctuation">)</span>     <span class="token comment"># 改变PWM占空比</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        pwm<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>                      <span class="token comment"># 停止PWM</span>        GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment"># 清理释放GPIO资源，将GPIO复位</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派控制直流电机</title>
      <link href="/posts/f27d64d3/"/>
      <url>/posts/f27d64d3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="1-直流电机"><a href="#1-直流电机" class="headerlink" title="1.直流电机"></a>1.直流电机</h1><p>直流电机是一种将直流电能转换为机械能的装置，被广泛的用于驱动各种设备，如电风扇、遥控小车、电动车窗等，非常适合作为机器人的行走机构，您可以很容易的在网上购买到，价格也不是很贵。<br> 　　小型直流电机的的电压范围通常是1.5V~30V，使用两根导线连接到直流电源上就能让电机转动起来，电压越高转得就越快。每个直流电机都有一个推荐电压，超出推荐电压太多容易导致电机被烧毁，而供电电压太低则转不起来。通过交换两根连接在电机上的导线顺序（实际上是改变电源的正负极），可以改变电机的转向。前面章节我们说过，直流电机属于高功耗元件，不可以直接使用树莓派进行驱动，因此我们需要使用一个外部电源。<br> 　　小型直流电机通常输出很高的转速和较低的扭矩，在作为机器人的驱动装置时，一般需要连接一个变速器，将其转换为低转速、高扭矩，使之有足够的力量驱动机器人。图7.1是典型的带变速器的小型直流电机，建议变速器和电机一起购买。</p><p><img src="E:\大三上\树莓派学习\笔记\6.用树莓派控制直流电机（L298N）.assets\13532817-f31f5406bfcace7b.png" alt="img" loading="lazy"></p><h1 id="2-双H桥直流电机驱动模块（L298N）"><a href="#2-双H桥直流电机驱动模块（L298N）" class="headerlink" title="2.双H桥直流电机驱动模块（L298N）"></a>2.双H桥直流电机驱动模块（L298N）</h1><p>H桥（H-Bridge）是控制直流电机的常用电路，因其电路形状酷似字母H而得名，可以控制直流电机的转速和方向，典型的H桥芯片有L293D、L298N等，以下我们以L298N为例进行介绍。实际使用的时候，为提高芯片的安全性、可靠性和方便性，我们一般会给芯片外接一些保护电路，并把输入输出引脚引接到排针上，从而形成一个功能模块。图7.2是一款典型的L298N双H桥直流电机驱动模块，可以很容易从网上购买到，价格也便宜。该模块的主要特点如下：</p><p><img src="E:\大三上\树莓派学习\笔记\6.用树莓派控制直流电机（L298N）.assets\13532817-d33ac6916eb9f32c.png" alt="img" loading="lazy"></p><ul><li>采用L298N双桥直流电机驱动芯片</li><li>工作电压范围5V35V，如果需要从模块内取电，则供电范围为7V35V</li><li>峰值输出电流2A</li><li>每个通道有一个使能输入端</li><li>可以驱动两个直流电机或者一个四线步进电机</li></ul><p> 　L298N双H桥直流电机驱动模块的引脚可以归纳成电源、控制和输出等三大类，下面是各类引脚的功能说明。</p><ul><li><strong>电压类引脚</strong></li></ul><p> 　+12V输入：L298N芯片的电源正极，模块上标称+12V，但实际范围可以是5V35V，如果需从模块内取电，则其范围为7V35V。<br> 　　GND：L298N芯片的电源地，使用的时候应该把树莓派的GND接到这里，即两者需要共地。<br> 　　+5V输出：L298N芯片输出的5V电源，可以给外部设备供电，使用的时候需要用跳线把5V输出使能端短接起来。</p><ul><li><strong>控制类引脚</strong></li></ul><p> 　ENA、ENB：A、B通道的使能端，高电平有效，可以用PWM来实现调速。使用时，可以接到树莓派的GPIO上，实现用程序进行控制。<br> 　　IN1、IN2、IN3、IN4：IN1、IN2为A通道的控制输入，IN3、IN4为B通道的控制输入。</p><ul><li><strong>输出类引脚</strong></li></ul><p> 　OUT1、OUT2、OUT3、OUT4：OUT1、OUT2由A通道输出，OUT3、OUT4由B通道输出，可以用于连接直流电机等设备。</p><p> 　控制直流电机的转向和转速实际是通过给控制类引脚设置不同的值来实现的，表7.1是使用通道A的控制直流电机的真值表，通道B与此类似。</p><p><img src="https://upload-images.jianshu.io/upload_images/13532817-d724bfe24fac8005.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/421/format/webp" alt="img" loading="lazy"></p><p>通道A的控制直流电机的真值表</p><blockquote><p><strong>提示：</strong></p><p>您购买到的L298N双H桥直流电机驱动模块可能与本章介绍的存在一定的差异，但这一类功能模块大同小异，请跟商家索要相应的技术资料了解更多的使用细节。</p></blockquote><h1 id="3-让直流电机动起来"><a href="#3-让直流电机动起来" class="headerlink" title="3. 让直流电机动起来"></a>3. 让直流电机动起来</h1><p> 　下面进入实战环节，我们将用树莓派通过L298N双H桥直流电机驱动模块控制一个电机的转向和转速。为了能让读者更好的理解，我们首先演示如何控制电机的转向，然后再进一步介绍如何控制电机转速。</p><h2 id="3-1-实验电路"><a href="#3-1-实验电路" class="headerlink" title="3.1 实验电路"></a>3.1 实验电路</h2><p> 　图7.3所示的是树莓派、L298N双H桥直流电机驱动模块和电机间连接的电路图，最终实物连线图如图7.4所示。我们使用树莓派的GPIO13、GPIO19和GPIO26等3个引脚，分别连接到L298N双H桥直流电机驱动模块的ENA、IN1和IN2，通过输入表7.1所示的不同电平组合就可以实现对电机的操纵。控制电机的转向和转速都是使用该电路，向ENA输入不同占空比的PWM脉冲信号就可以控制电机的转速。</p><p><img src="https://upload-images.jianshu.io/upload_images/13532817-ac38b15a79d6272d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/436/format/webp" alt="img" loading="lazy"></p><p>图 7.3 小型直流电机控制电路图</p><p><img src="https://upload-images.jianshu.io/upload_images/13532817-e41c49bbc602d114.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/756/format/webp" alt="img" loading="lazy"></p><p> 　尽管L298N双H桥直流电机驱动模块能驱动两个直流电机，但我们只演示如何驱动一个。驱动两个电机使用的是相同的技术，如果在您的项目中需要用到两个，也可以很容易地扩展它。</p><h2 id="3-2-程序思路"><a href="#3-2-程序思路" class="headerlink" title="3.2 程序思路"></a>3.2 程序思路</h2><p> 　控制电机转向和转速可以使用同一个电路，但程序思路上我们分两个程序来演示，具体思路如下：</p><ul><li><strong>控制电机转向思路</strong></li></ul><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token keyword">BEGIN</span>      引入<span class="token constant">GPIO</span>库      将连接<span class="token constant">ENA</span>的<span class="token constant">GPIO</span>引脚设置为输出模式    将连接<span class="token constant">IN1</span>的<span class="token constant">GPIO</span>引脚设置为输出模式    将连接<span class="token constant">IN2</span>的<span class="token constant">GPIO</span>引脚设置为输出模式        <span class="token constant">DO</span> <span class="token constant">FOREVER</span>          将<span class="token constant">IN1</span>设置为<span class="token number">0</span>，<span class="token constant">IN2</span>设置为<span class="token number">1</span>，将电机设置为正向转动          将<span class="token constant">ENA</span>设置为<span class="token number">1</span>，驱动<span class="token constant">A</span>通道电机转动          等待<span class="token number">5</span>秒          将<span class="token constant">ENA</span>设置为<span class="token number">0</span>，停止电机转动          等待<span class="token number">2</span>秒          将<span class="token constant">IN1</span>设置为<span class="token number">1</span>，<span class="token constant">IN2</span>设置为<span class="token number">0</span>，将电机设置为反向转动          将<span class="token constant">ENA</span>设置为<span class="token number">1</span>，驱动<span class="token constant">A</span>通道电机转动          等待<span class="token number">5</span>秒          将<span class="token constant">ENA</span>设置为<span class="token number">0</span>，停止电机转动          等待<span class="token number">2</span>秒    <span class="token constant">ENDO</span>      停止<span class="token constant">PWM</span>      清理释放<span class="token constant">GPIO</span>资源  <span class="token keyword">END</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>提示：</strong></p><p>除了采用将ENA置0的方法来让电机停止转动，将IN1和IN2同时设置为0或1也可以让电机停止下来。</p></blockquote><ul><li><strong>控制电机转速思路</strong></li></ul><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token keyword">BEGIN</span>      引入<span class="token constant">GPIO</span>库      将连接<span class="token constant">ENA</span>的<span class="token constant">GPIO</span>引脚设置为输出模式    将连接<span class="token constant">IN1</span>的<span class="token constant">GPIO</span>引脚设置为输出模式    将连接<span class="token constant">IN2</span>的<span class="token constant">GPIO</span>引脚设置为输出模式    设置<span class="token constant">ENA</span>输入一定频率的<span class="token constant">PWM</span>脉冲信号，创建<span class="token constant">PWM</span>对象      开始向<span class="token constant">ENA</span>输入占空比为<span class="token number">0</span>的<span class="token constant">PWM</span>脉冲信号          <span class="token constant">DO</span> <span class="token constant">FOREVER</span>          将<span class="token constant">IN1</span>设置为<span class="token number">0</span>，<span class="token constant">IN2</span>设置为<span class="token number">1</span>，将电机设置为正向转动          将<span class="token constant">ENA</span>设置为<span class="token number">1</span>，驱动<span class="token constant">A</span>通道电机转动                  speed <span class="token operator">=</span> <span class="token number">0</span>        <span class="token constant">DOWHILE</span> speed <span class="token operator">&lt;</span> <span class="token number">100</span>              将输入<span class="token constant">ENA</span>的<span class="token constant">PWM</span>脉冲信号的占空比修改为speed            speed <span class="token operator">+=</span> <span class="token number">5</span>            等待<span class="token number">1</span>秒        <span class="token constant">ENDDO</span>        将<span class="token constant">IN1</span>设置为<span class="token number">1</span>，<span class="token constant">IN2</span>设置为<span class="token number">0</span>，将电机设置为反向转动          将<span class="token constant">ENA</span>设置为<span class="token number">1</span>，驱动<span class="token constant">A</span>通道电机转动                  speed <span class="token operator">=</span> <span class="token number">0</span>        <span class="token constant">DOWHILE</span> speed <span class="token operator">&lt;</span> <span class="token number">100</span>              将输入<span class="token constant">ENA</span>的<span class="token constant">PWM</span>脉冲信号的占空比修改为speed            speed <span class="token operator">+=</span> <span class="token number">5</span>            等待<span class="token number">1</span>秒        <span class="token constant">ENDDO</span>    <span class="token constant">ENDO</span>          停止<span class="token constant">PWM</span>      清理释放<span class="token constant">GPIO</span>资源  <span class="token keyword">END</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 　电机的转向控制和转速控制的程序思路的最大区别在于ENA输入信号的不同。控制电机转向的程序思路只是简单的通过将ENA设置为1或0来启动和停止电机。对于电机转速控制，ENA输入的PWM脉冲信号，通过改变PWM脉冲信号的占空比来改变电机转速，占空比越大速度就越快，占空比为100%时相当于输入1（高电平），占空比为0%时相当于输入0（低电平）。</p><h2 id="3-3-程序代码"><a href="#3-3-程序代码" class="headerlink" title="3.3 程序代码"></a>3.3 程序代码</h2><p> 　以下是直流电机转向和转速控制程序，程序的详细说明见注释。</p><ul><li><strong>控制电机转向程序</strong></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO         <span class="token comment"># 引入GPIO模块</span><span class="token keyword">import</span> time                     <span class="token comment"># 引入time模块</span>ENA <span class="token operator">=</span> <span class="token number">13</span>                        <span class="token comment"># 设置GPIO13连接ENA</span>IN1 <span class="token operator">=</span> <span class="token number">19</span>                        <span class="token comment"># 设置GPIO19连接IN1</span>IN2 <span class="token operator">=</span> <span class="token number">26</span>                        <span class="token comment"># 设置GPIO26连接IN2</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 初始化</span>        GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>          <span class="token comment"># 使用BCM编号方式</span>        GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>       <span class="token comment"># 将连接ENA的GPIO引脚设置为输出模式</span>        GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>       <span class="token comment"># 将连接IN1的GPIO引脚设置为输出模式</span>        GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>       <span class="token comment"># 将连接IN2的GPIO引脚设置为输出模式</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># 驱动电机正向旋转5秒</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>     <span class="token comment"># 将IN1设置为0</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment"># 将IN2设置为1</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment"># 将ENA设置为1，启动A通道电机</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>               <span class="token comment"># 等待电机转动5秒</span>            <span class="token comment"># 电机停止2秒</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>     <span class="token comment"># 将ENA设置为0</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>               <span class="token comment"># 等待电机停止2秒</span>            <span class="token comment"># 驱动电机反向旋转5秒</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment"># 将IN1设置为1</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>     <span class="token comment"># 将IN2设置为0</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token comment"># 将ENA设置为1，启动A通道电机</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>               <span class="token comment"># 等待电机转动5秒</span>            <span class="token comment"># 电机停止2秒</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>     <span class="token comment"># 将ENA设置为0</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>               <span class="token comment"># 等待电机停止2秒</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        pwm<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>                      <span class="token comment"># 停止PWM</span>        GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment"># 清理释放GPIO资源，将GPIO复位</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 　运行这个程序后，您将看到直流电机反复的正向转动5秒后，停止两秒，再反向转动5秒后，停止2秒。</p><ul><li><strong>控制电机转速程序</strong></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO         <span class="token comment"># 引入GPIO模块</span><span class="token keyword">import</span> time                     <span class="token comment"># 引入time模块</span>ENA <span class="token operator">=</span> <span class="token number">13</span>                        <span class="token comment"># 设置GPIO13连接ENA</span>IN1 <span class="token operator">=</span> <span class="token number">19</span>                        <span class="token comment"># 设置GPIO19连接IN1</span>IN2 <span class="token operator">=</span> <span class="token number">26</span>                        <span class="token comment"># 设置GPIO26连接IN2</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 初始化</span>        GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>              <span class="token comment"># 使用BCM编号方式</span>        GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>           <span class="token comment"># 将ENA对应的GPIO引脚设置为输出模式</span>        GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>           <span class="token comment"># 将IN1对应的GPIO引脚设置为输出模式</span>        GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>           <span class="token comment"># 将IN2对应的GPIO引脚设置为输出模式</span>        freq <span class="token operator">=</span> <span class="token number">500</span>        speed <span class="token operator">=</span> <span class="token number">0</span>        pwm <span class="token operator">=</span> GPIO<span class="token punctuation">.</span>PWM<span class="token punctuation">(</span>ENA<span class="token punctuation">,</span> freq<span class="token punctuation">)</span>           <span class="token comment"># 设置向ENA输入PWM脉冲信号，频率为freq并创建PWM对象</span>        pwm<span class="token punctuation">.</span>start<span class="token punctuation">(</span>speed<span class="token punctuation">)</span>                    <span class="token comment"># 以speed的初始占空比开始向ENA输入PWM脉冲信号</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># 将电机设置为正向转动</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>         <span class="token comment"># 将IN1设置为0</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>          <span class="token comment"># 将IN2设置为1</span>            <span class="token comment"># 通过改变PWM占空比，让电机转速不断加快</span>            <span class="token keyword">for</span> speed <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                pwm<span class="token punctuation">.</span>ChangeDutyCycle<span class="token punctuation">(</span>speed<span class="token punctuation">)</span>  <span class="token comment"># 改变PWM占空比</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token comment"># 将电机设置为反向转动</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>          <span class="token comment"># 将IN1设置为1</span>            GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>         <span class="token comment"># 将IN2设置为0</span>            <span class="token comment"># 通过改变PWM占空比，让电机转速不断加快</span>            <span class="token keyword">for</span> speed <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                pwm<span class="token punctuation">.</span>ChangeDutyCycle<span class="token punctuation">(</span>speed<span class="token punctuation">)</span>  <span class="token comment"># 改变PWM占空比</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        pwm<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>                          <span class="token comment"># 停止PWM</span>        GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span>                      <span class="token comment"># 清理释放GPIO资源，将GPIO复位</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 　运行这个程序后，您将看到直流电机首先正向转动，转动速度不断增加，在达到最大转速后，直流电机短暂停止转动，然后反向转动，转动速度不断增加，如此反复运动。</p><h1 id="4-本章小结"><a href="#4-本章小结" class="headerlink" title="4 .本章小结"></a>4 .本章小结</h1><p> 　本章首先介绍了直流电机的基本知识，然后介绍了L298N双H桥直流电机驱动模块的相关基础知识，最后介绍了使用树莓派和L298N双H桥直流电机驱动模块来控制一个直流电机的转向和转速的电路、思路和程序等知识。</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派GPIO模块使用基础</title>
      <link href="/posts/dd95cd02/"/>
      <url>/posts/dd95cd02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="1-RPi-GPIO-模块使用基础"><a href="#1-RPi-GPIO-模块使用基础" class="headerlink" title="1.RPi.GPIO 模块使用基础"></a>1.RPi.GPIO 模块使用基础</h1><h4 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h4><p>导入 RPi.GPIO 模块：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过该操作，您可以将模块名称映射为 GPIO，以便接下来您其它脚本进行使用。</p><p>导入模块并检查它是否导入成功，可以尝试：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO<span class="token keyword">except</span> RuntimeError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token string">"导入 RPi.GPIO 时出现错误！这可能由于没有超级用户权限造成的。您可以使用 'sudo' 来运行您的脚本。"</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="针脚编号"><a href="#针脚编号" class="headerlink" title="针脚编号"></a>针脚编号</h4><p>目前有两种方式可以通过 RPi.GPIO 对 Raspberry Pi 上的 IO 针脚进行编号。</p><p>第一种方式是使用 BOARD 编号系统。该方式参考 Raspberry Pi 主板上 P1 接线柱的针脚编号。使用该方式的优点是无需考虑主板的修订版本，您硬件始终都是可用的状态。您将无需从新连接线路和更改您的代码。</p><p>第二种方式是使用 BCM 编号。这是一种较低层的工作方式 – 该方式参考 Broadcom SOC 的通道编号。使用过程中，您始终要保证主板上的针脚与图表上标注的通道编号相对应。您的脚本可能在 Raspberry Pi 主板进行修订版本更新时无法工作。</p><p>指定您所使用的方式（必须指定）：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BOARD<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h4><p>可能您的 Raspberry Pi 的 GPIO 上同时有多个脚本&#x2F;循环。因此，如果 RPi.GPIO 检测到某个针脚被设置为其它用途而非默认的状态（默认为输入），您会在尝试配置某脚本时得到警告消息。</p><p>禁用该警告消息：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>setwarnings<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置通道"><a href="#配置通道" class="headerlink" title="配置通道"></a>配置通道</h4><p>您需要为每个用于输入或输出的针脚配置通道。</p><p>配置为输入的通道：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>IN<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（通道编号是基于您所使用的编号系统所指定的（BOARD 或 BCM）。）</p><p>更多关于输入通道的进阶信息可以在<a href="https://shumeipai.nxez.com/2016/09/28/rpi-gpio-module-inputs.html">这里</a>找到。</p><p>配置为输出的通道：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（通道编号是基于您所使用的编号系统所指定的（BOARD 或 BCM）。）</p><p>您还可以指定输出通道的初始值：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">,</span> initial <span class="token operator">=</span> GPIO<span class="token punctuation">.</span>HIGH<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>读取 GPIO 针脚的值：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span><span class="token builtin">input</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（通道编号是基于您所使用的编号系统所指定的（BOARD 或 BCM）。）这将返回 0 &#x2F; GPIO.LOW &#x2F; False 或者 1 &#x2F; GPIO.HIGH &#x2F; True。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>设置 GPIO 针脚的输出状态：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（通道编号是基于您所使用的编号系统所指定的（BOARD 或 BCM）。）</p><p>状态可以为 0 &#x2F; GPIO.LOW &#x2F; False 或者 1 &#x2F; GPIO.HIGH &#x2F; True。</p><h4 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h4><p>在任何程序结束后，请养成清理用过的资源的好习惯。使用 RPi.GPIO 也同样需要这样。恢复所有使用过的通道状态为输入，您可以避免由于短路意外损坏您的 Raspberry Pi 针脚。注意，该操作仅会清理您的脚本使用过的 GPIO 通道。</p><p>在您的脚本结束后进行清理：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Raspberry-Pi-修订版本和-RPi-GPIO-版本"><a href="#Raspberry-Pi-修订版本和-RPi-GPIO-版本" class="headerlink" title="Raspberry Pi 修订版本和 RPi.GPIO 版本"></a>Raspberry Pi 修订版本和 RPi.GPIO 版本</h4><p>检测 Raspberry Pi 主板的修订版本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>RPI_REVISION<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检测 RPi.GPIO 的版本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>VERSION<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="2-使用-RPi-GPIO-模块的输出（Output）功能"><a href="#2-使用-RPi-GPIO-模块的输出（Output）功能" class="headerlink" title="2.使用 RPi.GPIO 模块的输出（Output）功能"></a>2.使用 RPi.GPIO 模块的输出（Output）功能</h1><p>1、首先对 RPi.GPIO 进行设置（根据<a href="https://shumeipai.nxez.com/2016/09/28/rpi-gpio-module-basics.html">这里</a>的描述）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIOGPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、设置某个输出针脚状态为高电平：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>HIGH<span class="token punctuation">)</span><span class="token comment"># 或者</span>GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 或者</span>GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、设置某个输出针脚状态为低电平：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>LOW<span class="token punctuation">)</span><span class="token comment"># 或者</span>GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 或者</span>GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span>`<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、程序结束后进行清理</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意，您可以读取使用 input() 函数设置的输出通道的当前状态。例如对输出进行切换：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token keyword">not</span> GPIO<span class="token punctuation">.</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="3-使用-RPI-GPIO-模块的脉宽调制（PWM）功能"><a href="#3-使用-RPI-GPIO-模块的脉宽调制（PWM）功能" class="headerlink" title="3.使用 RPI.GPIO 模块的脉宽调制（PWM）功能"></a>3.使用 RPI.GPIO 模块的脉宽调制（PWM）功能</h1><p>脉宽调制(PWM)是指用微处理器的数字输出来对模拟电路进行控制，是一种对模拟信号电平进行数字编码的方法。在树莓派上，可以通过对GPIO的编程来实现PWM。</p><p>创建一个 PWM 实例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p  <span class="token operator">=</span> GPIO<span class="token punctuation">.</span>PWM<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> frequency<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启用 PWM：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token punctuation">.</span>start<span class="token punctuation">(</span>dc<span class="token punctuation">)</span>   <span class="token comment"># dc 代表占空比（范围：0.0 &lt;= dc >= 100.0）</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更改频率：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token punctuation">.</span>ChangeFrequency<span class="token punctuation">(</span>freq<span class="token punctuation">)</span>   <span class="token comment"># freq 为设置的新频率，单位为 Hz</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更改占空比：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token punctuation">.</span>ChangeDutyCycle<span class="token punctuation">(</span>dc<span class="token punctuation">)</span>  <span class="token comment"># 范围：0.0 &lt;= dc >= 100.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>停止 PWM：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意，如果实例中的变量“p”超出范围，也会导致 PWM 停止。</p><p>以下为使 LED 每两秒钟闪烁一次的示例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIOGPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BOARD<span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>p <span class="token operator">=</span> GPIO<span class="token punctuation">.</span>PWM<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'点击回车停止：'</span><span class="token punctuation">)</span>   <span class="token comment"># 在 Python 2 中需要使用raw_input</span>p<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下为使 LED 在亮&#x2F;暗之间切换的示例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time <span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIOGPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BOARD<span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>p <span class="token operator">=</span> GPIO<span class="token punctuation">.</span>PWM<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>  <span class="token comment"># 通道为 12 频率为 50Hz</span>p<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token keyword">for</span> dc <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            p<span class="token punctuation">.</span>ChangeDutyCycle<span class="token punctuation">(</span>dc            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">for</span> dc  <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            p<span class="token punctuation">.</span>ChangeDutyCycle<span class="token punctuation">(</span>dc<span class="token punctuation">)</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>exceptKeyboardInterrupt<span class="token punctuation">:</span><span class="token keyword">pass</span>p<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派开机自动发送IP地址到邮箱</title>
      <link href="/posts/3daa603a/"/>
      <url>/posts/3daa603a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h2>    <div id="aplayer-howAWkEp" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="497572729" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#C20C0C"    ></div><h1 id="1-编写开机获取IP地址的python程序"><a href="#1-编写开机获取IP地址的python程序" class="headerlink" title="1.编写开机获取IP地址的python程序"></a>1.编写开机获取IP地址的python程序</h1><blockquote><p>获取指定网卡的IP地址：ifconfig wlan0 | grep inet | grep -o -E ([0-9]+.){3}[0-9]+ | head -n 1</p><p>获取IP地址： hostname -I</p></blockquote><p><img src="https://i.loli.net/2020/12/17/8rsoDSpbYzmUANe.png" alt="image-20200725142149402" loading="lazy"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> smtplib<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>multipart <span class="token keyword">import</span> MIMEMultipart<span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>image <span class="token keyword">import</span> MIMEImage<span class="token keyword">import</span> subprocess<span class="token keyword">import</span> time<span class="token keyword">import</span> traceback<span class="token comment">#延时15秒，使系统准备完毕（连上网络）</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token comment">#获取指定网卡 wlan0 的ip地址</span>cont <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>getoutput<span class="token punctuation">(</span><span class="token string">"ifconfig wlan0 | grep inet | grep -o -E \([0-9]+\.\)&#123;3&#125;[0-9]+ | head -n 1"</span><span class="token punctuation">)</span>localtime <span class="token operator">=</span> time<span class="token punctuation">.</span>asctime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#将时间和IP地址写入日志文件中</span>log <span class="token operator">=</span> cont<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>localtime<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"launlog.txt"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token comment"># 发送邮件服务器</span>smtpserver <span class="token operator">=</span> <span class="token string">'smtp.qq.com'</span><span class="token comment">#代发邮件的邮箱和用于登录的认证码(在QQ邮箱的设置中获取)</span>sender <span class="token operator">=</span> <span class="token string">"xxxxxxxxxx@qq.com"</span>aucode <span class="token operator">=</span> <span class="token string">'xxxxxxxxxxx'</span><span class="token comment">#接收邮件的IP地址</span>receiver <span class="token operator">=</span> <span class="token string">"xxxxxxxxxx@qq.com"</span>message <span class="token operator">=</span> MIMEMultipart<span class="token punctuation">(</span><span class="token string">'related'</span><span class="token punctuation">)</span>message<span class="token punctuation">[</span><span class="token string">'From'</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">'RaspberryPi'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>message<span class="token punctuation">[</span><span class="token string">'To'</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">'树莓派'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>subject <span class="token operator">=</span> <span class="token string">'树莓派'</span>message<span class="token punctuation">[</span><span class="token string">'Subject'</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span>subject<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>ipContent <span class="token operator">=</span> <span class="token string">"无线网络IP:"</span><span class="token operator">+</span>contcontent <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span>ipContent<span class="token punctuation">,</span> <span class="token string">'plain'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>message<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    smtp <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span>smtpserver<span class="token punctuation">,</span> <span class="token number">465</span><span class="token punctuation">)</span>    smtp<span class="token punctuation">.</span>ehlo<span class="token punctuation">(</span><span class="token punctuation">)</span>    smtp<span class="token punctuation">.</span>login<span class="token punctuation">(</span>sender<span class="token punctuation">,</span>aucode<span class="token punctuation">)</span>    smtp<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>sender<span class="token punctuation">,</span> receiver<span class="token punctuation">,</span> message<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    smtp<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span> smtplib<span class="token punctuation">.</span>SMTPException<span class="token punctuation">:</span><span class="token comment">#将异常信息写入日志文件中</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"launlog.txt"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>traceback<span class="token punctuation">.</span>format_exc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-编写开机启动脚本"><a href="#2-编写开机启动脚本" class="headerlink" title="2.编写开机启动脚本"></a>2.编写开机启动脚本</h1><blockquote><p>wuxian.sh</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c">#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash### BEGIN INIT INFO<span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Provides<span class="token operator">:</span>          scriptname</span></span><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Required<span class="token operator">-</span>Start<span class="token operator">:</span>    $remote_fs $network</span></span><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Required<span class="token operator">-</span>Stop<span class="token operator">:</span>     $remote_fs $network</span></span><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Default<span class="token operator">-</span>Start<span class="token operator">:</span>     <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span></span></span><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Default<span class="token operator">-</span>Stop<span class="token operator">:</span>      <span class="token number">0</span> <span class="token number">1</span> <span class="token number">6</span> <span class="token number">2</span></span></span><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Short<span class="token operator">-</span>Description<span class="token operator">:</span> Start daemon at boot time</span></span><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">Description<span class="token operator">:</span>       Enable service provided by daemon<span class="token punctuation">.</span></span></span>### END INIT INFO<span class="token function">do_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    python3 <span class="token operator">/</span>home<span class="token operator">/</span>pi<span class="token operator">/</span>Desktop<span class="token operator">/</span>wuxian<span class="token punctuation">.</span>py    echo <span class="token string">" start"</span> <span class="token operator">>></span> <span class="token operator">/</span>home<span class="token operator">/</span>pi<span class="token operator">/</span>Desktop<span class="token operator">/</span>wuxian<span class="token punctuation">.</span>txt<span class="token punctuation">&#125;</span><span class="token function">do_stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   echo <span class="token string">"stop "</span> <span class="token operator">>></span> <span class="token operator">/</span>home<span class="token operator">/</span>pi<span class="token operator">/</span>Desktop<span class="token operator">/</span>wuxian<span class="token punctuation">.</span>txt<span class="token punctuation">&#125;</span><span class="token function">do_restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    echo <span class="token string">"restart"</span> <span class="token operator">>></span> <span class="token operator">/</span>home<span class="token operator">/</span>pi<span class="token operator">/</span>Desktop<span class="token operator">/</span>wuxian<span class="token punctuation">.</span>txt<span class="token punctuation">&#125;</span><span class="token function">do_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    echo <span class="token string">"status"</span> <span class="token operator">>></span> <span class="token operator">/</span>home<span class="token operator">/</span>pi<span class="token operator">/</span>Desktop<span class="token operator">/</span>wuxian<span class="token punctuation">.</span>txt<span class="token punctuation">&#125;</span><span class="token function">do_fallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    echo <span class="token string">"fallback"</span> <span class="token operator">>></span> <span class="token operator">/</span>home<span class="token operator">/</span>pi<span class="token operator">/</span>Desktop<span class="token operator">/</span>wuxian<span class="token punctuation">.</span>txt<span class="token punctuation">&#125;</span><span class="token keyword">case</span> <span class="token string">"$1"</span> instart<span class="token punctuation">)</span> do_start    <span class="token punctuation">;</span><span class="token punctuation">;</span>stop<span class="token punctuation">)</span> do_stop    <span class="token punctuation">;</span><span class="token punctuation">;</span>restart<span class="token punctuation">)</span> do_restart    <span class="token punctuation">;</span><span class="token punctuation">;</span>status<span class="token punctuation">)</span> do_status    <span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token operator">*</span><span class="token punctuation">)</span> do_fallback    <span class="token punctuation">;</span><span class="token punctuation">;</span>esacexit <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3、系统配置"><a href="#3、系统配置" class="headerlink" title="3、系统配置"></a>3、系统配置</h1><blockquote><p>（1）将 wuxian.sh 放置 &#x2F;etc&#x2F;init.d&#x2F; 文件夹中<br>（2）在 &#x2F;etc&#x2F;rc5.d&#x2F; 文件夹下创建一个wuxian.sh的软连接<br>（3）在终端中输入ln -s &#x2F;etc&#x2F;init.d&#x2F;wuxian.sh .&#x2F;S01wuxian.sh</p></blockquote><p>注意：</p><p>a.此时 wuxian.py 在 &#x2F;home&#x2F;pi&#x2F;Desktop&#x2F; 中</p><p>b.wuxian.sh在&#x2F;etc&#x2F;init.d&#x2F;中</p><p>c.软连接S01wuxian.sh在&#x2F;etc&#x2F;rc5.d&#x2F;中</p><p>d.有线网络的IP地址获取将Python脚本里面的<strong>wlan0</strong>改成<strong>eth0</strong>就行</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派驱动57步进电机</title>
      <link href="/posts/7da4ed6c/"/>
      <url>/posts/7da4ed6c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="一、57步进电机参数"><a href="#一、57步进电机参数" class="headerlink" title="一、57步进电机参数"></a>一、57步进电机参数</h1><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103121.png" alt="img" loading="lazy"></p><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103210.png" alt="img" loading="lazy"></p><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103221.png" alt="img" loading="lazy"></p><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103159.png" alt="img" loading="lazy"></p><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103226.png" alt="img" loading="lazy"></p><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103231.png" alt="img" loading="lazy"></p><p><img src="https://raw.githubusercontent.com/wushuai2000/PicGo/main/img/20211222103152.png" alt="img" loading="lazy"></p><h1 id="二、树莓派利用python控制57步进电机"><a href="#二、树莓派利用python控制57步进电机" class="headerlink" title="二、树莓派利用python控制57步进电机"></a>二、树莓派利用python控制57步进电机</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO<span class="token keyword">import</span> time<span class="token comment"># w1,w2,w3,w4,w5,w6 = 0,1,0,0,0,0,0   细分400，电流3.5A，电压24V</span>IN1 <span class="token operator">=</span> <span class="token number">20</span>  <span class="token comment"># 接PUL-</span>IN2 <span class="token operator">=</span> <span class="token number">21</span>  <span class="token comment"># 接PUL+</span>IN3 <span class="token operator">=</span> <span class="token number">12</span>  <span class="token comment"># 接DIR-</span>IN4 <span class="token operator">=</span> <span class="token number">16</span>  <span class="token comment"># 接DIR+</span><span class="token keyword">def</span> <span class="token function">setStep</span><span class="token punctuation">(</span>w1<span class="token punctuation">,</span> w2<span class="token punctuation">,</span> w3<span class="token punctuation">,</span> w4<span class="token punctuation">)</span><span class="token punctuation">:</span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> w1<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> w2<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN3<span class="token punctuation">,</span> w3<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>IN4<span class="token punctuation">,</span> w4<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 正转</span><span class="token comment"># 控制电机旋转的快慢和圈数 delay越小转得越快，1600为一圈</span><span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>delay<span class="token punctuation">,</span> steps<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> steps<span class="token punctuation">)</span><span class="token punctuation">:</span>        setStep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token comment"># 控制电机一直旋转</span><span class="token keyword">def</span> <span class="token function">yizhi</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        setStep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token comment"># 反转</span><span class="token comment"># 控制电机旋转的快慢和圈数 delay越小转得越快，1600为一圈</span><span class="token keyword">def</span> <span class="token function">backward</span><span class="token punctuation">(</span>delay<span class="token punctuation">,</span> steps<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> steps<span class="token punctuation">)</span><span class="token punctuation">:</span>        setStep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>        setStep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token comment"># 初始化树莓派引脚，设置树莓派的引脚为输出状态</span><span class="token keyword">def</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    GPIO<span class="token punctuation">.</span>setwarnings<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN1<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN2<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN3<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>IN4<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span><span class="token comment"># 带异常处理</span><span class="token comment"># 控制电机正转一圈</span><span class="token keyword">def</span> <span class="token function">hhh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    setup<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>         forward<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">,</span><span class="token number">1600</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>  <span class="token comment"># When 'Ctrl+C' is pressed, the child function destroy() will be  executed.</span>         destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 带异常处理</span><span class="token comment"># 控制电机一直旋转</span><span class="token keyword">def</span> <span class="token function">zzz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    setup<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>         yizhi<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>  <span class="token comment"># When 'Ctrl+C' is pressed, the child function destroy() will be  executed.</span>         destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 检测正转和反转</span><span class="token keyword">def</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        i<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"1、正转\t2、反转\t3、退出\n请输入数字： "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入脉冲个数（1600个脉冲为一圈）："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            forward<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请等待3秒..."</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stop..."</span><span class="token punctuation">)</span>            stop<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> i<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>            a<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入脉冲个数（1600个脉冲为一圈）："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            backward<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>  <span class="token comment"># 发射脉冲时间间隔0.0001（单位秒）   脉冲个数a 如果编码器的设置是8细分 那么1600冲就转360度</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请等待3秒..."</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stop..."</span><span class="token punctuation">)</span>            stop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># stop</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">return</span><span class="token comment"># 清除树莓派引脚状态赋值            </span><span class="token keyword">def</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    GPIO<span class="token punctuation">.</span>cleanup<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 释放数据</span>    <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>  <span class="token comment"># Program start from here</span>   setup<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">try</span><span class="token punctuation">:</span>        loop<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>  <span class="token comment"># When 'Ctrl+C' is pressed, the child function destroy() will be  executed.</span>        destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 镜像烧录 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
